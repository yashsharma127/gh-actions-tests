name: Self-hosted Test

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  setup:
    runs-on: self-hosted
    steps:
      - name: Change dir, chmod and run install.sh
        run: |
          cd ~/test-swarm-setup/TS-EQ-INFRA
          chmod +x ./install.sh
          sudo ./install.sh
      - name: Wait for db-migrator task to complete
        run: |
          echo "Waiting for db-migrator service task to exit..."
          timeout=60  # seconds
          interval=5

          while [ $timeout -gt 0 ]; do
            state=$(docker service ps --no-trunc --filter name=ts-wms_db-migrator --format '{{.CurrentState}}' | head -n 1)
            echo "Current state: $state"
            
            if echo "$state" | grep -q "Complete"; then
              echo "db-migrator task has completed."
              exit 0
            elif echo "$state" | grep -q "Failed"; then
              echo "db-migrator task failed!"
              exit 1
            fi

            sleep $interval
            timeout=$((timeout - interval))
          done

          echo "Timeout waiting for db-migrator task to complete."
          exit 1

  test:
    runs-on: self-hosted
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install dependencies
        run: npm install
      - name: Cache Playwright Browsers
        uses: actions/cache@v3
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-browsers-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-playwright-browsers-
      - name: Install Playwright Browsers (if not cached)
        run: |
          if [ ! -d ~/.cache/ms-playwright ]; then
            npx playwright install --with-deps
          fi
      - name: Run Playwright tests
        run: npx playwright test --trace on

  cleanup:
    runs-on: self-hosted
    needs: test
    steps:
      - name: Remove ts-wms docker stack
        run: |
          cd ~/test-swarm-setup/TS-EQ-INFRA
          docker stack rm ts-wms
      - name: Remove secrets created for stack setup
        run: |
          docker secret rm $(docker secret ls -q) 2>/dev/null || true
      - name: Remove volumes created for stack setup
        run: |
          docker volume ls -q --filter name=^ts-wms | xargs -I {} docker volume rm {} 2>/dev/null || true

